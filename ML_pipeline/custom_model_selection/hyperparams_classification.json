{
    "SVC" : {
        "kernel": ["rbf"],
        "gamma": ["auto"],
        "C": [10],
        "max_iter": [-1]

    },
    "SVC_reserva" : {
        "kernel": ["linear", "rbf", "poly", "sigmoid"],
        "gamma": ["scale", "auto_deprecated", "auto"],
        "C": [1],
        "max_iter": [100],
        "decision_function_shape" : ["ovr","ovo"]
    },
    "LinearSVC" : {
        "penalty": ["l1", "l2"],
        "dual": [false],
        "multi_class": ["ovr", "crammer_singer"],
        "fit_intercept": [false],
        "class_weight": ["balanced"],
        "max_iter": [100]
    },

    "KNeighborsClassifier": {
      "n_neighbors": [5],

            "weights": ["uniform", "distance"],
            "algorithm": ["ball_tree", "kd_tree", "brute"],
            "p": [1, 2,3]
    },
        "KNeighborsClassifier_reserva": {
            "n_neighbors": [3],
            "weights": ["uniform", "distance"],
            "algorithm": ["ball_tree", "kd_tree", "brute"],
            "p": [1, 2,3],
            "leaf_size" : [3],
            "notes" : ["leaf_size is for Kd or ball_tree"]
        },
    "LDA": {
    "solver": ["lsqr", "eigen","svd"],
    "shrinkage": [null],
    "store_covariance" : ["True"],
    "tol" : [0.0001]


    },
        "LDA_reserva": {
        "solver": ["lsqr", "eigen","svd"],
        "shrinkage": [null, "auto"],
        "store_covariance" : ["False","True"],
        "comments" : ["svd in solver if shrinkage is null"]

        },
    "LogisticRegression": {
        "penalty": ["l2"],
        "dual": [false],
        "fit_intercept": [false],
        "max_iter" : [300],
        "C": [1.9],
        "solver": ["lbfgs"]
    },











    "LogisticRegression_reserva": {
        "penalty": ["l2", "elasticnet", "none" ,"l1"],
        "dual": [false],
        "multi_class": ["ovr", "multinomial","auto"],
        "fit_intercept": [false],
        "C": [0.01, 0.1, 1.0],
        "max_iter" : [300],
        "solver": ["newton-cg", "lbfgs","liblinear","sag","saga"],
        "class_weight" : ["balanced"],
        "notes" : ["Used to specify the norm used in the penalization. The ‘newton-cg’, ‘sag’ and ‘lbfgs’ solvers support only l2 penalties. ‘elasticnet’ is only supported by the ‘saga’ solver. If ‘none’ (not supported by the liblinear solver), no regularization is applied."]
    },
    "Lasso": {
        "alpha": [0.5, 1.0],
        "fit_intercept": [false],
        "selection": ["random", "cyclic"]
    },

    "DecisionTreeClassifier": {
        "criterion": ["gini", "entropy"],
        "min_samples_split": [2, 5, 8],
        "max_features": ["auto"]
    },

    "Forests": {
        "n_estimators": [20],
        "criterion": ["gini"],
        "max_features": ["log2"],
        "min_samples_split" : [4],
        "min_samples_leaf" : [1],
        "bootstrap" : ["False"],
        "class_weight" : ["balanced"]





    },
    "Forests_reserva": {
        "n_estimators": [150],
        "criterion": ["gini","entropy"],
        "max_features": ["auto","sqrt", "log2"],
        "min_samples_split" : [5],
        "min_samples_leaf" : [1],
        "bootstrap" : ["True", "False"],
        "warm_start" : ["False","True"],
        "class_weight" : ["balanced_subsample", "balanced"]

    },

    "LGBMClassifier": {
        "n_estimators": [80],
        "learning_rate": [0.1],
        "max_depth" : [11],
        "colsample_bytree" : [0.8],
        "boosting_type": ["gbdt"],
        "subsample": [0.3],
        "num_leaves" : [50]

    },



        "LGBMClassifier_reserva": {
            "n_estimators": [10],
            "max_bin" : [200],
            "num_leaves" : [5],
            "learning_rate": [10],
            "feature_fraction_seed": [42],
            "bagging_seed": [42],
            "max_depth" : [3],
            "boosting_type": ["gbdt","dart","goss"],
            "scale_pos_weight" : [2.7],
            "class_weight" : ["balanced"],
            "subsample": [0.2]
        },



    "BaggingClassifier": {
        "n_estimators": [100, 250],
        "max_samples": [0.75, 1.0],
        "max_features": [0.75, 1.0]
    },

    "AdaBoostClassifier": {
        "n_estimators": [700],
        "algorithm":  ["SAMME.R"],
        "learning_rate": [0.012]
    },

    "SGDClassifier": {

        "validation_fraction" : [0.1]
    },

    "MLPClassifier": {
        "hidden_layer_sizes" : [2],
        "solver" :["adam"],
        "learning_rate" :["constant"],
        "learning_rate_init" : [0.001],
        "warm_start" : ["False","True"],
        "max_iter" : [1000],
        "validation_fraction" : [0.1],
        "activation": ["relu"]



    },
        "MLPClassifier_reserva": {
            "hidden_layer_sizes" : [1,10,100,1000],
            "solver" :["sgd","lbfgs","adam"],
            "learning_rate" :["constant","invscaling","adaptive"],
            "learning_rate_init" : [0.001],
            "warm_start" : ["False","True"],
            "max_iter" : [1000],
            "validation_fraction" : [0.1],
            "activation": ["identity","logistic","tanh","relu"]

    },
    "FeedForwardNet": {
        "model_type": "classifier",
        "n_hidden_layers": [1, 3, 5, 7, 9],
        "output_activation": [null],
        "output_dim": [1],
        "n_epochs": [50]
    }
}
